// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Party {
  id                  Int         @id @default(autoincrement())
  englishName         String
  arabicName          String
  abbr                String      @unique
  numberOfVoting      BigInt
  numberOfSubscribing BigInt
  lastYearChairs      Int
  thisYearChairs      Int
  color               String
  locations           Location[]

  // For fast global Top-K by votes with stable tie-breaks
  @@index([numberOfVoting, id])
}

model Location {
  id                  Int      @id @default(autoincrement())
  regionCode          String
  numberOfVoting      BigInt
  numberOfSubscribing BigInt
  partyId             Int
  party               Party    @relation(fields: [partyId], references: [id], onDelete: Cascade)

  // Speed up regional ranking by pushing ORDER BY to the DB
  @@index([regionCode, numberOfVoting])
  // Efficient lookup of party rows within a region
  @@index([partyId, regionCode])
  // If the domain guarantees one row per (partyId, regionCode), you can use:
  // @@unique([partyId, regionCode])
}
